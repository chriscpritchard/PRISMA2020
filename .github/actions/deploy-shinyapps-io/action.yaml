name: "deploy-shinyapps-io"
description: "Deploys to ShinyApps.io"

runs:
  using: "composite"
  steps:
    - name: Enable analytics
      if: env.ANALYTICS
      working-directory: ${{env.SHINY_APP_WORKING_DIRECTORY}}
      run: |
        curl ${ANALYTICS_JS} --output www/${ANALYTICS_JS_FN}
        sed -i "s#REPLACE_WITH_REAL_JS#${ANALYTICS_JS_FN//#/\\#}#g" ./www/analytics.R
        sed -i "s#REPLACE_WITH_REAL_ID#${ANALYTICS_ID//#/\\#}#g" ./www/analytics.R
        sed -i "s#REPLACE_WITH_ANALYTICS_HOST#${ANALYTICS_HOST//#/\\#}#g" ./www/analytics.R
        sed -i '/INSERT_ANALYTICS_CODE/r ./www/analytics.R' ./app.R
        touch .Renviron
        echo ANALYTICS="$ANALYTICS" >> .Renviron
      shell: bash
        
    - uses: r-lib/actions/setup-r@v2
    - uses: r-lib/actions/setup-pandoc@v2
    - name: Query dependencies
      run: |
        install.packages('remotes')
        saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
      shell: Rscript {0}
    - name: Restore R package cache
      uses: actions/cache@v2
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
        restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-
    - uses: r-lib/actions/setup-r-dependencies@v2
      with:
        extra-packages: |
          rsconnect
          devtools
    - name: Install package
      run: |
        devtools::install_github(repo = Sys.getenv("DEPLOY_REPO", unset = "nealhaddaway/PRISMA2020"), ref = Sys.getenv("DEPLOY_REF", unset = "HEAD"))
      shell: Rscript {0}
    - name: Deploy to shinyapps.io
      working-directory: ${{env.SHINY_APP_WORKING_DIRECTORY}}
      run: |
        library(rsconnect)
        setAccountInfo(name = Sys.getenv("SHINY_ACC_NAME", unset = NA), token = Sys.getenv("TOKEN", unset = NA), secret = Sys.getenvSECRET", unset=NA))
        deployApp(appName = Sys.getenv("SHINY_APP_NAME", unset = NA))
      shell: Rscript {0}